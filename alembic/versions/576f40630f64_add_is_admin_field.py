"""add_is_admin_field

Revision ID: 576f40630f64
Revises: ff9bd84cfba2
Create Date: 2024-11-23 20:47:08.227053

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '576f40630f64'
down_revision: Union[str, None] = 'ff9bd84cfba2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('blog_posts', sa.Column('summary', sa.Text(), nullable=True))
    op.alter_column('blog_posts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('blog_posts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('testimonials', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('testimonials', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_constraint('testimonials_user_id_fkey', 'testimonials', type_='foreignkey')
    op.create_foreign_key(None, 'testimonials', 'users', ['user_id'], ['id'])
    op.drop_column('testimonials', 'author_name')
    op.drop_column('testimonials', 'rating')
    op.add_column('users', sa.Column('is_teacher', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'is_teacher')
    op.add_column('testimonials', sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('testimonials', sa.Column('author_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'testimonials', type_='foreignkey')
    op.create_foreign_key('testimonials_user_id_fkey', 'testimonials', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('testimonials', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('testimonials', 'updated_at')
    op.alter_column('blog_posts', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('blog_posts', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('blog_posts', 'summary')
    # ### end Alembic commands ###
